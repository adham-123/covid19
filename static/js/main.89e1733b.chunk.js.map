{"version":3,"sources":["Components/Header/DropDown.js","Components/InfoBox.js","Components/Header/Header.js","Components/LineGraph.js","Images/earth.jpg","Components/Slider.js","Components/Table.js","Components/PieChart.js","Components/DataLayout.js","Components/GoogleMap.js","Components/Map.js","Components/Footer.js","App.js","index.js"],"names":["clearInput","document","getElementById","value","fillInput","country","DropDown","props","useEffect","name","className","type","size","id","list","placeholder","onChange","changeCountry","onFocus","onDoubleClick","onBlur","countries","map","InfoBox","styling","padding","width","color","borderRadius","radius","backgroundColor","bcolor","boxShadow","shadow","margin","fontSize","active","activeColor","style","marginLeft","marginL","onClick","click","content","Header","c","find","setCasesType","setDataShowing","setGraphSlider","setSortType","undefined","setCountry","border","cursor","outline","alt","src","flag","casesType","isMobile","window","onscroll","header","wholeHeader","body","offsetTop","pageYOffset","classList","remove","add","stickyFunction","nf","Intl","NumberFormat","options","animation","duration","hover","animationDuration","responsiveAnimationDuration","legend","display","elements","points","line","tension","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","format","xAxes","gridLines","time","tooltipFormat","yAxes","ticks","callback","index","values","LineGraph","useState","chartData","setChartData","dataTotal","setDataTotal","daily","cName","setCName","setTotal","buildChartData","lastDataPoint","cases","date","newDataPoint","x","y","push","buildChartTotal","a","fetch","then","response","json","message","timeline","fetchData","fetchAllData","setSliderMax","length","sliderValue","graphSlider","slice","borderColor","maxHeight","position","height","datasets","pointRadius","fill","hoverRadius","Slider","minWidth","min","max","sliderMax","step","event","target","Table","dataShowing","flexDirection","sortType","fontWeight","recovered","deaths","critical","tests","casePerPerson","deathPerPerson","testPerPerson","todayCases","todayRecovered","todayDeaths","PieChart","nFormatter","num","symbol","formatIndex","findIndex","toFixed","DataLayout","borderBottom","borderTopRightRadius","borderTopLeftRadius","textAlign","verticalAlign","fontFamily","borderLeft","paddingLeft","paddingBottom","containerStyle","CircleComponent","setShowingInfoWindow","setCurrentCountry","currentZoom","onClose","casesOptions","strokeColor","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","zIndex","recoveredOptions","deathsOptions","selectedOptions","selectedType","center","Math","sqrt","onMouseOver","onMouseOut","Maps","showingInfoWindow","currentCountry","setCurrentZoom","mapContainerStyle","zoom","onZoomChanged","this","getZoom","streetViewControl","mapTypeControl","maxZoom","minZoom","onCloseClick","React","memo","Map","href","rel","Footer","App","setCountries","graphsliderMax","setGraphSliderMax","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","sorted","sortedData","sort","b","sortData","worldwide","pic","lat","lng","population","concat","selectedCountry","countriesS","countryInfo","iso2","long","oneCasePerPeople","oneTestPerPeople","oneDeathPerPeople","countryS","activeElement","blur","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.89e1733b.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst clearInput = () => {\r\n  document.getElementById(\"myInput\").value = null;\r\n};\r\nconst fillInput = (country) => {\r\n  document.getElementById(\"myInput\").value = country;\r\n};\r\n\r\nfunction DropDown(props) {\r\n  useEffect(() => {\r\n    fillInput(props.country.name);\r\n  }, [props.country]);\r\n\r\n  return (\r\n    <div className=\"header__dropdown\">\r\n      <input\r\n        type=\"text\"\r\n        size=\"8\"\r\n        name=\"myInput\"\r\n        id=\"myInput\"\r\n        list=\"dropdown__countries\"\r\n        className=\"header__dropbtn\"\r\n        placeholder=\"Search Country\"\r\n        onChange={props.changeCountry}\r\n        onFocus={() => clearInput()}\r\n        onDoubleClick={() => clearInput()}\r\n        onBlur={() => fillInput(props.country.name)}\r\n      />\r\n      <datalist id=\"dropdown__countries\">\r\n        {props.countries.map((country) => (\r\n          <option key={country.value + country.name} value={country.name} />\r\n        ))}\r\n      </datalist>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDown;\r\n","import React from \"react\";\r\n\r\nimport \".././Styling/infoBox.css\";\r\n\r\nfunction InfoBox(props) {\r\n  let styling = {\r\n    padding: props.padding,\r\n    width: props.width,\r\n    color: props.color,\r\n    borderRadius: props.radius,\r\n    backgroundColor: props.bcolor,\r\n    boxShadow: props.shadow,\r\n    margin: props.margin,\r\n    fontSize: props.fontSize,\r\n  };\r\n\r\n  if (props.active) {\r\n    styling = {\r\n      padding: props.padding,\r\n      width: props.width,\r\n      color: props.activeColor,\r\n      borderRadius: props.radius,\r\n      backgroundColor: props.bcolor,\r\n      margin: props.margin,\r\n      fontSize: props.fontSize,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"infoBox\"\r\n      style={{ margin: props.margin, marginLeft: props.marginL }}\r\n    >\r\n      <button\r\n        className=\"infoBox__button\"\r\n        onClick={props.click}\r\n        style={styling}\r\n        onFocus={props.onFocus}\r\n      >\r\n        <span>\r\n          <p>{props.content}</p>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from \"react\";\r\n\r\nimport DropDown from \"./DropDown\";\r\nimport InfoBox from \"../../Components/InfoBox\";\r\n\r\nimport \"../../Styling/header.css\";\r\n\r\nfunction Header(props) {\r\n  const c = props.countries.find((c) => c.name === \"WorldWide\");\r\n\r\n  const stickyFunction = () => {\r\n    var header = document.getElementById(\"myHeader\");\r\n    var wholeHeader = document.getElementById(\"header\");\r\n    var body = document.getElementById(\"bodyExtension\");\r\n    var sticky = header.offsetTop;\r\n\r\n    if (props.isMobile.width < 710) {\r\n      if (window.pageYOffset < 50) {\r\n        header.classList.remove(\"sticky\");\r\n        body.classList.remove(\"bodyExtension\");\r\n      } else {\r\n        header.classList.add(\"sticky\");\r\n        body.classList.add(\"bodyExtension\");\r\n      }\r\n    } else {\r\n      wholeHeader.classList.add(\"headerSticky\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <button\r\n        className=\"header__title\"\r\n        onClick={() => (\r\n          props.setCasesType(\"cases\"),\r\n          props.setDataShowing(\"all\"),\r\n          props.setGraphSlider({ value: \"200\" }),\r\n          props.setSortType(\"\"),\r\n          c !== undefined ? props.setCountry(c) : null\r\n        )}\r\n        style={{\r\n          border: \"0px\",\r\n          backgroundColor: \"rgba(230, 230, 230,1)\",\r\n          cursor: \"pointer\",\r\n          outline: \"none\",\r\n        }}\r\n      >\r\n        Covid 19 Tracker\r\n      </button>\r\n\r\n      <img\r\n        alt={`${props.country.name} Flag`}\r\n        src={props.country.flag}\r\n        className=\"header_image\"\r\n      />\r\n\r\n      <div className=\"header__dd_img\" id=\"myHeader\">\r\n        <div className=\"header__right\">\r\n          <DropDown\r\n            countries={props.countries}\r\n            changeCountry={props.changeCountry}\r\n            country={props.country}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"header__infoBox\">\r\n          <InfoBox\r\n            content=\"Cases\"\r\n            active={props.casesType === \"cases\"}\r\n            click={() => props.setCasesType(\"cases\")}\r\n            padding={props.isMobile.width < 365 ? \"3px\" : \"10px\"}\r\n            activeColor=\"rgb(225, 0, 0)\"\r\n            margin=\"1px\"\r\n            fontSize={props.isMobile.width < 420 ? \"12px\" : \"15px\"}\r\n          />\r\n          <InfoBox\r\n            content=\"Recovered\"\r\n            active={props.casesType === \"recovered\"}\r\n            click={() => props.setCasesType(\"recovered\")}\r\n            padding={props.isMobile.width < 365 ? \"3px\" : \"10px\"}\r\n            activeColor=\"rgb(70, 250, 70)\"\r\n            margin=\"1px\"\r\n            fontSize={props.isMobile.width < 420 ? \"12px\" : \"15px\"}\r\n          />\r\n          <InfoBox\r\n            content=\"Deaths\"\r\n            active={props.casesType === \"deaths\"}\r\n            click={() => props.setCasesType(\"deaths\")}\r\n            padding={props.isMobile.width < 365 ? \"3px\" : \"10px\"}\r\n            activeColor=\"rgb(50, 50, 50)\"\r\n            margin=\"1px\"\r\n            fontSize={props.isMobile.width < 420 ? \"12px\" : \"15px\"}\r\n          />\r\n        </div>\r\n      </div>\r\n      {\r\n        (window.onscroll = () => {\r\n          stickyFunction();\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport InfoBox from \"./InfoBox\";\r\n\r\nconst nf = new Intl.NumberFormat();\r\n\r\nconst options = {\r\n  animation: {\r\n    duration: 0,\r\n  },\r\n  hover: {\r\n    animationDuration: 0,\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n  legend: {\r\n    display: true,\r\n  },\r\n  elements: {\r\n    points: {\r\n      radius: 0,\r\n    },\r\n    line: {\r\n      tension: 0.4, // disables bezier curves\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return nf.format(tooltipItem.value);\r\n      },\r\n    },\r\n  },\r\n  hover: {\r\n    mode: \"index\",\r\n    intersect: true,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n        },\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return nf.format(value);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction LineGraph({ country, casesType, ...props }) {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [dataTotal, setDataTotal] = useState([]);\r\n  const [daily, setDaily] = useState(true);\r\n  const [cName, setCName] = useState(\"Loading...\");\r\n  const [total, setTotal] = useState({});\r\n\r\n  const buildChartData = (data, casesType = \"cases\") => {\r\n    if (data) {\r\n      let chartData = [];\r\n      let lastDataPoint;\r\n      if (data.cases !== undefined) {\r\n        for (let date in data.cases) {\r\n          if (lastDataPoint && daily) {\r\n            let newDataPoint = {\r\n              x: date,\r\n              y:\r\n                data[casesType][date] - lastDataPoint < 0\r\n                  ? 0\r\n                  : data[casesType][date] - lastDataPoint,\r\n            };\r\n            chartData.push(newDataPoint);\r\n          }\r\n          if (lastDataPoint && daily === false) {\r\n            let newDataPoint = {\r\n              x: date,\r\n              y: data[casesType][date] < 0 ? 0 : data[casesType][date],\r\n            };\r\n            chartData.push(newDataPoint);\r\n          }\r\n\r\n          lastDataPoint = data[casesType][date];\r\n        }\r\n        return chartData;\r\n      }\r\n    }\r\n  };\r\n\r\n  const buildChartTotal = (data, casesType = \"cases\") => {\r\n    if (data) {\r\n      let chartData = [];\r\n      let lastDataPoint;\r\n      if (data.cases !== undefined) {\r\n        for (let date in data.cases) {\r\n          if (lastDataPoint) {\r\n            let newDataPoint = {\r\n              x: date,\r\n              y: data[casesType][date] < 0 ? 0 : data[casesType][date],\r\n            };\r\n            chartData.push(newDataPoint);\r\n          }\r\n          lastDataPoint = data[casesType][date];\r\n        }\r\n        return chartData;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (country.name !== \"WorldWide\" && country.name !== undefined) {\r\n      const fetchData = async () => {\r\n        await fetch(\r\n          `https://disease.sh/v3/covid-19/historical/${country.name}?lastdays=all`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (\r\n              data.message ===\r\n              \"Country not found or doesn't have any historical data\"\r\n            ) {\r\n              return null;\r\n            }\r\n\r\n            setChartData(buildChartData(data.timeline, casesType));\r\n            setDataTotal(buildChartTotal(data.timeline, casesType));\r\n            if (chartData) setCName(data.country);\r\n            props.setGraphSlider({ value: 150 });\r\n          });\r\n      };\r\n      fetchData();\r\n    } else {\r\n      const fetchAllData = async () => {\r\n        await fetch(\r\n          `https://disease.sh/v3/covid-19/historical/all?lastdays=all`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            data.country = \"WorldWide\";\r\n            setCName(data.country);\r\n\r\n            setChartData(buildChartData(data, casesType));\r\n            setDataTotal(buildChartTotal(data, casesType));\r\n            props.setGraphSlider({ value: 200 });\r\n          });\r\n      };\r\n      fetchAllData();\r\n    }\r\n  }, [country.name, daily, casesType]);\r\n\r\n  //Slider useEffect to so the data showing the value user set on the slider\r\n  useEffect(() => {\r\n    if (chartData && dataTotal) {\r\n      props.setSliderMax(chartData.length);\r\n      let sliderValue = chartData.length - props.graphSlider.value;\r\n      let c = chartData.slice(sliderValue, chartData.length);\r\n      props.setCountry({ ...country, timeline: c });\r\n      setTotal(dataTotal.slice(sliderValue, dataTotal.length));\r\n    }\r\n  }, [props.graphSlider, chartData, dataTotal]);\r\n\r\n  const color =\r\n    casesType === \"cases\"\r\n      ? \"rgba(200, 20, 50, 0.5)\"\r\n      : casesType === \"recovered\"\r\n      ? \"rgba(0, 200, 50, 0.5)\"\r\n      : \"rgba(100, 100, 100, 0.5)\";\r\n\r\n  const borderColor =\r\n    casesType === \"cases\"\r\n      ? \"rgb(200, 20, 50)\"\r\n      : casesType === \"recovered\"\r\n      ? \"rgb(0, 200, 50)\"\r\n      : \"rgb(100, 100, 100)\";\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxHeight: \"100%\",\r\n        position: \"relative\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      {/* <div className=\"linegraph__graphbuttons\">\r\n        <h2 style={{ color: borderColor }}>{cName}</h2>\r\n        <InfoBox\r\n          content=\"Total\"\r\n          margin=\"0px\"\r\n          marginL=\"5px\"\r\n          bcolor={borderColor}\r\n          shadow={` 0 6px ${color}`}\r\n          click={() => setDaily(false)}\r\n          activeColor=\"rgb(255, 255, 255)\"\r\n          active={daily === false}\r\n          color=\"rgb(0, 0, 0)\"\r\n        />\r\n        <InfoBox\r\n          content=\"Daily\"\r\n          margin=\"0px\"\r\n          marginL=\"5px\"\r\n          bcolor={borderColor}\r\n          shadow={` 0 6px ${color}`}\r\n          click={() => setDaily(true)}\r\n          activeColor=\"rgb(255, 255, 255)\"\r\n          active={daily === true}\r\n          color=\"rgb(0, 0, 0)\"\r\n        />\r\n      </div> */}\r\n\r\n      {country.timeline?.length > 0 && (\r\n        <Line\r\n          options={options}\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: color,\r\n                borderColor: borderColor,\r\n                data: country.timeline,\r\n                pointRadius: 1,\r\n                fill: true,\r\n                label: cName + \" \" + casesType,\r\n                hoverRadius: 5,\r\n              },\r\n              // {\r\n              //   backgroundColor: \"rgba(25, 0, 255, 0.7)\",\r\n              //   borderColor: \"rgb(25, 0, 255)\",\r\n              //   data: total,\r\n              //   pointRadius: 1,\r\n              //   fill: false,\r\n              //   label: \"Total\",\r\n              //   hoverRadius: 5,\r\n              // },\r\n            ],\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","export default __webpack_public_path__ + \"static/media/earth.f22c010c.jpg\";","import React from \"react\";\r\n\r\nimport \"../Styling/slider.css\";\r\n\r\nfunction Slider(props) {\r\n  const handleChange = (event) => {\r\n    props.setGraphSlider({ value: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"slidecontainer\">\r\n      <p style={{ minWidth: \"110px\" }}>Past {props.graphSlider.value} Days:</p>\r\n      <input\r\n        type=\"range\"\r\n        min=\"10\"\r\n        max={props.sliderMax}\r\n        step=\"1\"\r\n        value={props.graphSlider.value}\r\n        onChange={handleChange}\r\n        className=\"slider\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../Styling/table.css\";\r\nimport InfoBox from \"./InfoBox\";\r\n\r\nconst nf = new Intl.NumberFormat();\r\n\r\nfunction Table({ dataShowing, ...props }) {\r\n  // useEffect(() => {\r\n  //   return function scrollTable() {\r\n  //     var elem = document.getElementById(props.country.name);\r\n  //     elem.scrollIntoView(true);\r\n  //   };\r\n  // }, [props.country]);\r\n\r\n  // click = () => {\r\n  //   this.scr.scrollIntoView();\r\n  // }\r\n\r\n  // const handleButtonClick = (scrol) => {\r\n  //   document.getElementById(scrol).scrollIntoView({\r\n  //     behavior: \"smooth\",\r\n  //     block: \"start\",\r\n  //     inline: \"nearest\",\r\n  //   });\r\n  // };\r\n\r\n  // var rows = document.querySelectorAll(props.country.name);\r\n\r\n  // // line is zero-based\r\n  // // line is the row number that you want to see into view after scroll\r\n  // rows[9].scrollIntoView({\r\n  //   behavior: \"smooth\",\r\n  //   block: \"center\",\r\n  // });\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          fontSize: \"13px\",\r\n        }}\r\n      >\r\n        <InfoBox\r\n          content=\"All\"\r\n          click={() => props.setDataShowing(\"all\")}\r\n          onFocus={() => props.setSortType(\"\")}\r\n          width=\"50px\"\r\n          margin=\"0px\"\r\n          active={dataShowing === \"all\"}\r\n          color=\"rgb(40, 40, 40)\"\r\n          activeColor=\"rgb(250, 250, 250)\"\r\n        />\r\n        <InfoBox\r\n          content=\"Today\"\r\n          click={() => props.setDataShowing(\"today\")}\r\n          onFocus={() => props.setSortType(\"\")}\r\n          width=\"60px\"\r\n          margin=\"0px\"\r\n          active={dataShowing === \"today\"}\r\n          color=\"rgb(40, 40, 40)\"\r\n          activeColor=\"rgb(250, 250, 250)\"\r\n        />\r\n      </span>\r\n\r\n      <div className=\"table__data\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => props.setSortType(\"countries\")}>\r\n                {props.sortType === \"countries\" ? (\r\n                  <p>Country ▾</p>\r\n                ) : (\r\n                  <span>Country</span>\r\n                )}\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  dataShowing === \"all\"\r\n                    ? () => props.setSortType(\"cases\")\r\n                    : () => props.setSortType(\"todayCases\")\r\n                }\r\n              >\r\n                {dataShowing === \"today\" ? (\r\n                  <p style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                    Today\r\n                  </p>\r\n                ) : null}\r\n                {props.sortType === \"cases\" ||\r\n                props.sortType === \"todayCases\" ? (\r\n                  <p>Cases ▾</p>\r\n                ) : (\r\n                  <span>Cases</span>\r\n                )}\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  dataShowing === \"all\"\r\n                    ? () => props.setSortType(\"recovered\")\r\n                    : () => props.setSortType(\"todayRecovered\")\r\n                }\r\n              >\r\n                {dataShowing === \"today\" ? (\r\n                  <p style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                    Today\r\n                  </p>\r\n                ) : null}\r\n                {props.sortType === \"recovered\" ||\r\n                props.sortType === \"todayRecovered\" ? (\r\n                  <p>Recovered ▾</p>\r\n                ) : (\r\n                  <span>Recovered</span>\r\n                )}\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  dataShowing === \"all\"\r\n                    ? () => props.setSortType(\"deaths\")\r\n                    : () => props.setSortType(\"todayDeaths\")\r\n                }\r\n              >\r\n                {dataShowing === \"today\" ? (\r\n                  <p style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                    Today\r\n                  </p>\r\n                ) : null}\r\n                {props.sortType === \"deaths\" ||\r\n                props.sortType === \"todayDeaths\" ? (\r\n                  <p>Deaths ▾</p>\r\n                ) : (\r\n                  <span>Deaths</span>\r\n                )}\r\n              </th>\r\n              <th onClick={() => props.setSortType(\"active\")}>\r\n                {props.sortType === \"active\" ? (\r\n                  <p>Active ▾</p>\r\n                ) : (\r\n                  <span>Active</span>\r\n                )}\r\n              </th>\r\n              <th>Critical</th>\r\n              <th>Tests</th>\r\n              <th>Case/Person</th>\r\n              <th>Death/Person</th>\r\n              <th>Test/Person</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.countries.map((country) =>\r\n              dataShowing === \"all\" ? (\r\n                <tr key={country.name} id={country.name}>\r\n                  <td>{country.name}</td>\r\n                  <td>{nf.format(country.cases)}</td>\r\n                  <td>{nf.format(country.recovered)}</td>\r\n                  <td>{nf.format(country.deaths)}</td>\r\n                  <td>{nf.format(country.active)}</td>\r\n                  <td>{nf.format(country.critical)}</td>\r\n                  <td>{nf.format(country.tests)}</td>\r\n                  <td>{nf.format(country.casePerPerson)}</td>\r\n                  <td>{nf.format(country.deathPerPerson)}</td>\r\n                  <td>{nf.format(country.testPerPerson)}</td>\r\n                </tr>\r\n              ) : (\r\n                <tr key={country.name} id={country.name}>\r\n                  <td>{country.name}</td>\r\n                  <td>{nf.format(country.todayCases)}</td>\r\n                  <td>{nf.format(country.todayRecovered)}</td>\r\n                  <td>{nf.format(country.todayDeaths)}</td>\r\n                  <td>{nf.format(country.active)}</td>\r\n                  <td>{nf.format(country.critical)}</td>\r\n                  <td>{nf.format(country.tests)}</td>\r\n                  <td>{nf.format(country.casePerPerson)}</td>\r\n                  <td>{nf.format(country.deathPerPerson)}</td>\r\n                  <td>{nf.format(country.testPerPerson)}</td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction PieChart({ countries, casesType }) {\r\n  const [topFive, setTopFive] = useState();\r\n\r\n  useEffect(() => {\r\n    let topCountries = [];\r\n    casesType === \"cases\"\r\n      ? (topCountries = countries.sort((a, b) => (a.cases > b.cases ? -1 : 1)))\r\n      : casesType === \"recovered\"\r\n      ? (topCountries = countries.sort((a, b) =>\r\n          a.recovered > b.recovered ? -1 : 1\r\n        ))\r\n      : (topCountries = countries.sort((a, b) =>\r\n          a.deaths > b.deaths ? -1 : 1\r\n        ));\r\n\r\n    let c = topCountries.slice(1, 6);\r\n\r\n    setTopFive(c);\r\n  }, [countries, casesType]);\r\n\r\n  let cName = [];\r\n  let cValue = [];\r\n\r\n  countries.length > 1 ? (cName = topFive.map((c) => c.name)) : (cName = []);\r\n\r\n  if (countries.length > 1) {\r\n    casesType === \"cases\"\r\n      ? (cValue = topFive.map((c) => c.cases))\r\n      : casesType === \"recovered\"\r\n      ? (cValue = topFive.map((c) => c.recovered))\r\n      : (cValue = topFive.map((c) => c.deaths));\r\n  }\r\n\r\n  const options = {\r\n    labels: cName,\r\n    datasets: [\r\n      {\r\n        label: \"Rainfall\",\r\n        backgroundColor: [\r\n          \"#B21F00\",\r\n          \"#C9DE00\",\r\n          \"#2FDE00\",\r\n          \"#00A6B4\",\r\n          \"#6800B4\",\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"#501800\",\r\n          \"#4B5000\",\r\n          \"#175000\",\r\n          \"#003350\",\r\n          \"#35014F\",\r\n        ],\r\n        data: cValue,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Pie\r\n        data={options}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: `Top 5 countries ${casesType} `,\r\n            fontSize: 20,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"right\",\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\n\r\nimport \"../Styling/dataLayout.css\";\r\nimport Table from \"../Components/Table.js\";\r\nimport PieChart from \"./PieChart\";\r\n\r\nconst nf = new Intl.NumberFormat();\r\n\r\nfunction nFormatter(num) {\r\n  const format = [\r\n    { value: 1e18, symbol: \"E\" },\r\n    { value: 1e15, symbol: \"P\" },\r\n    { value: 1e12, symbol: \"T\" },\r\n    { value: 1e9, symbol: \"B\" },\r\n    { value: 1e6, symbol: \"M\" },\r\n    { value: 1e3, symbol: \"k\" },\r\n    { value: 1, symbol: \"\" },\r\n  ];\r\n  const formatIndex = format.findIndex((data) => num >= data.value);\r\n  return (\r\n    (num / format[formatIndex === -1 ? 6 : formatIndex].value).toFixed(2) +\r\n    format[formatIndex === -1 ? 6 : formatIndex].symbol\r\n  );\r\n}\r\n\r\nfunction DataLayout({\r\n  country,\r\n  countries,\r\n  casesType,\r\n  sortType,\r\n  setSortType,\r\n  setDataShowing,\r\n  dataShowing,\r\n}) {\r\n  return (\r\n    <div className=\"dataLayout\">\r\n      <div className=\"datalayout__overview\">\r\n        <div\r\n          style={{\r\n            borderBottom: \"1px solid gray\",\r\n            width: \"100%\",\r\n            display: \"table\",\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              padding: \"10px\",\r\n              backgroundColor: \"rgb(255, 255, 255)\",\r\n              borderTopRightRadius: \"9px\",\r\n              borderTopLeftRadius: \"9px\",\r\n              boxShadow:\r\n                \"inset 100px 0px 100px -50px rgb(170, 170, 170), inset -100px 0px 100px -50px rgb(170, 170, 170)\",\r\n              textAlign: \"center\",\r\n              verticalAlign: \"middle\",\r\n            }}\r\n          >\r\n            <b style={{ fontSize: \"22px\", fontFamily: \"cursive\" }}>\r\n              {country.name}\r\n            </b>{\" \"}\r\n            Overview\r\n          </p>\r\n        </div>\r\n        <div className=\"datalayout__overview_in\">\r\n          <div\r\n            className=\"datalayout__overview_box\"\r\n            style={{ borderLeft: \"hidden\" }}\r\n          >\r\n            <p className=\"datalayout__overview_title\">\r\n              Cases <br />\r\n              <span className=\"datalayout__overview_boldnumber\">\r\n                {nFormatter(country.cases)}\r\n              </span>{\" \"}\r\n              <br />\r\n              <span className=\"datalayout__overview_dailynumber\">\r\n                + {nf.format(country.todayCases)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Recovered <br />\r\n              <span className=\"datalayout__overview_boldnumber\">\r\n                {nFormatter(country.recovered)}\r\n              </span>{\" \"}\r\n              <br />\r\n              <span className=\"datalayout__overview_dailynumber\">\r\n                + {nf.format(country.todayRecovered)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Deaths <br />\r\n              <span className=\"datalayout__overview_boldnumber\">\r\n                {nFormatter(country.deaths)}\r\n              </span>{\" \"}\r\n              <br />\r\n              <span className=\"datalayout__overview_dailynumber\">\r\n                + {nf.format(country.todayDeaths)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"datalayout__overview_in\">\r\n          <div\r\n            className=\"datalayout__overview_box\"\r\n            style={{ borderLeft: \"hidden\" }}\r\n          >\r\n            <p className=\"datalayout__overview_title\">\r\n              Active <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(country.active)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Critical <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(country.critical)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Tests <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(country.tests)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"datalayout__overview_in\">\r\n          <div\r\n            className=\"datalayout__overview_box\"\r\n            style={{ borderLeft: \"hidden\" }}\r\n          >\r\n            <p className=\"datalayout__overview_title\">\r\n              Case/Person <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(country.casePerPerson)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Test/Person <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(country.testPerPerson)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Deaths/Person <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(country.deathPerPerson)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <p\r\n          style={{ paddingLeft: \"8px\", paddingBottom: \"2px\", fontSize: \"10px\" }}\r\n        >\r\n          <b>Case/Person</b> = <b>X</b> (Every <b>X</b> people there's one Case\r\n          )\r\n        </p>\r\n      </div>\r\n      <div className=\"datalayout__table\">\r\n        <Table\r\n          countries={countries}\r\n          country={country}\r\n          setSortType={setSortType}\r\n          sortType={sortType}\r\n          setDataShowing={setDataShowing}\r\n          dataShowing={dataShowing}\r\n        />\r\n      </div>\r\n      {/* <div className=\"datalayout__graph_pie\">\r\n        <PieChart countries={countries} casesType={casesType} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataLayout;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  Circle,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nfunction CircleComponent({\r\n  setShowingInfoWindow,\r\n  setCurrentCountry,\r\n  country,\r\n  currentZoom,\r\n  casesType,\r\n  onClose,\r\n}) {\r\n  if (country.name === \"WorldWide\") {\r\n    return null;\r\n  }\r\n\r\n  const options = {\r\n    casesOptions: {\r\n      strokeColor: \"rgba(255, 0, 0)\",\r\n      strokeWeight: 0.5,\r\n      fillColor: \"rgba(255, 0, 0)\",\r\n      fillOpacity: 0.35,\r\n      clickable: true,\r\n      draggable: false,\r\n      editable: false,\r\n      visible: true,\r\n      zIndex: 1,\r\n    },\r\n    recoveredOptions: {\r\n      strokeColor: \"rgba(0, 255, 150)\",\r\n      strokeWeight: 1.5,\r\n      fillColor: \"rgba(0, 255, 0)\",\r\n      fillOpacity: 0.35,\r\n      clickable: true,\r\n      draggable: false,\r\n      editable: false,\r\n      visible: true,\r\n      zIndex: 1,\r\n    },\r\n    deathsOptions: {\r\n      strokeColor: \"rgba(20, 20, 20)\",\r\n      strokeWeight: 1.5,\r\n      fillColor: \"rgba(0, 0, 0)\",\r\n      fillOpacity: 0.35,\r\n      clickable: true,\r\n      draggable: false,\r\n      editable: false,\r\n      visible: true,\r\n      zIndex: 1,\r\n    },\r\n  };\r\n\r\n  const onCircleClick = () => {\r\n    setCurrentCountry(country);\r\n    setShowingInfoWindow(true);\r\n  };\r\n\r\n  const selectedOptions =\r\n    casesType === \"cases\"\r\n      ? options.casesOptions\r\n      : casesType === \"deaths\"\r\n      ? options.deathsOptions\r\n      : options.recoveredOptions;\r\n\r\n  const selectedType =\r\n    casesType === \"cases\"\r\n      ? country.cases\r\n      : casesType === \"recovered\"\r\n      ? country.recovered\r\n      : country.deaths;\r\n\r\n  return (\r\n    <Circle\r\n      center={country.center}\r\n      options={selectedOptions}\r\n      radius={(Math.sqrt(selectedType) * 600) / currentZoom}\r\n      onMouseOver={onCircleClick}\r\n      onMouseOut={onClose}\r\n      clickable\r\n    />\r\n  );\r\n}\r\n\r\nfunction Maps(props) {\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false);\r\n  const [currentCountry, setCurrentCountry] = useState(props.country);\r\n  const [currentZoom, setCurrentZoom] = useState();\r\n\r\n  function handleZoomChanged() {\r\n    setCurrentZoom(this.getZoom() + 1);\r\n  }\r\n\r\n  const onClose = () => {\r\n    showingInfoWindow && setShowingInfoWindow(false);\r\n  };\r\n\r\n  const nf = new Intl.NumberFormat();\r\n\r\n  return (\r\n    //googleMapsApiKey=\"AIzaSyA0qwEl7BqF71zcbmOvKq67ZgmPJNB47AM\"\r\n    <LoadScript>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={props.country.center}\r\n        zoom={props.country.zoom}\r\n        onZoomChanged={handleZoomChanged}\r\n        options={{\r\n          // gestureHandling: \"greedy\",\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n          maxZoom: 6,\r\n          minZoom: 1,\r\n        }}\r\n      >\r\n        <>\r\n          {props.countries.map((country) => (\r\n            <CircleComponent\r\n              setShowingInfoWindow={setShowingInfoWindow}\r\n              setCurrentCountry={setCurrentCountry}\r\n              country={country}\r\n              key={country.name}\r\n              showingInfoWindow={showingInfoWindow}\r\n              currentZoom={currentZoom}\r\n              casesType={props.casesType}\r\n              onClose={onClose}\r\n            />\r\n          ))}\r\n\r\n          {showingInfoWindow && (\r\n            <InfoWindow position={currentCountry.center} onCloseClick={onClose}>\r\n              <div>\r\n                <span>\r\n                  <img\r\n                    alt={`${currentCountry.name} Flag`}\r\n                    src={currentCountry.flag}\r\n                    className=\"map_image\"\r\n                  />\r\n                </span>\r\n                <br />\r\n                <span>{`${currentCountry.name}`}</span>\r\n                <br />\r\n                <span>{`Cases: ${nf.format(currentCountry.cases)}`}</span>\r\n                <br />\r\n                <span>{`Recovered: ${nf.format(\r\n                  currentCountry.recovered\r\n                )}`}</span>\r\n                <br />\r\n                <span>{`Deaths: ${nf.format(currentCountry.deaths)}`}</span>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </>\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default React.memo(Maps);\r\n","import React from \"react\";\r\n\r\nimport Maps from \"./GoogleMap.js\";\r\n\r\nfunction Map(props) {\r\n  const color =\r\n    props.casesType === \"cases\"\r\n      ? \"rgba(200, 20, 50, 0.5)\"\r\n      : props.casesType === \"recovered\"\r\n      ? \"rgba(0, 200, 50, 0.5)\"\r\n      : \"rgba(100, 100, 100, 0.5)\";\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", height: \"100%\", width: \"100%\" }}>\r\n      <div\r\n        style={{\r\n          padding: \"3px\",\r\n          // borderBottom: \"1px solid rgb(180, 180, 180)\",\r\n        }}\r\n      >\r\n        <p style={{ display: \"inline\" }}>Map of </p>\r\n        <h3 style={{ display: \"inline\", color: color }}>{props.casesType}</h3>\r\n      </div>\r\n      <div\r\n        style={{ position: \"relative\", height: \"250px\", width: \"100%\" }}\r\n      >\r\n        <Maps\r\n          countries={props.countries}\r\n          country={props.country}\r\n          casesType={props.casesType}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <p\r\n          style={{\r\n            fontSize: \"13px\",\r\n            color: \"gray\",\r\n            paddingLeft: \"10px\",\r\n            display: \"inline\",\r\n            position: \"relative\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          Source:\r\n        </p>\r\n        <a\r\n          href=\"https://www.worldometers.info/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={{ color: \"gray\", display: \"inline\", fontSize: \"10px\" }}\r\n        >\r\n          Worldometer\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\n\r\nimport \"../Styling/Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>\r\n        Contact me:{\" \"}\r\n        <a href=\"mailto: adham@adhamnasr.com\">adham@adhamnasr.com</a>\r\n      </p>\r\n      <p style={{ fontSize: \"11px\" }}>Copyright&copy; 2020</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./Styling/App.css\";\n\nimport Header from \"./Components/Header/Header.js\";\nimport LineGraph from \"./Components/LineGraph\";\nimport pic from \"./Images/earth.jpg\";\nimport Slider from \"./Components/Slider.js\";\nimport DataLayout from \"./Components/DataLayout\";\nimport Map from \"./Components/Map\";\nimport Footer from \"./Components/Footer\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState({});\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [sortType, setSortType] = useState(\"\");\n  const [graphSlider, setGraphSlider] = useState({ value: \"200\" });\n  const [graphsliderMax, setGraphSliderMax] = useState(\"300\");\n  const [dataShowing, setDataShowing] = useState(\"all\"); //map today/all\n\n  const isMobile = useWindowSize();\n\n  function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n  }\n\n  useEffect(() => {\n    const sortData = (data) => {\n      const sortedData = [...data];\n\n      return sortType === \"cases\"\n        ? sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1))\n        : sortType === \"deaths\"\n        ? sortedData.sort((a, b) => (a.deaths > b.deaths ? -1 : 1))\n        : sortType === \"recovered\"\n        ? sortedData.sort((a, b) => (a.recovered > b.recovered ? -1 : 1))\n        : sortType === \"todayCases\"\n        ? sortedData.sort((a, b) => (a.todayCases > b.todayCases ? -1 : 1))\n        : sortType === \"todayDeaths\"\n        ? sortedData.sort((a, b) => (a.todayDeaths > b.todayDeaths ? -1 : 1))\n        : sortType === \"todayRecovered\"\n        ? sortedData.sort((a, b) =>\n            a.todayRecovered > b.todayRecovered ? -1 : 1\n          )\n        : sortType === \"active\"\n        ? sortedData.sort((a, b) => (a.active > b.active ? -1 : 1))\n        : sortType === \"countries\"\n        ? sortedData.sort((a, b) => (a.name < b.name ? -1 : 1))\n        : sortedData.sort((a, b) => (a > b ? -1 : 1));\n    };\n    const sorted = sortData(countries);\n    setCountries(sorted);\n  }, [sortType]);\n\n  const onChange = (event) => {\n    const { value } = event.target;\n    let countryS = countries.find((c) => c.name === value);\n\n    if (countryS !== undefined) {\n      setCountry(countryS);\n      document.activeElement.blur();\n    }\n  };\n\n  useEffect(() => {\n    const selectedCountry = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/all?yesterday=true\")\n        .then((response) => response.json())\n        .then((data) => {\n          const worldwide = data;\n          worldwide.name = \"WorldWide\";\n          worldwide.flag = pic;\n          worldwide.center = {\n            lat: 0,\n            lng: 0,\n          };\n          worldwide.zoom = 1;\n          worldwide.casePerPerson = data.population / data.cases;\n          worldwide.testPerPerson = data.population / data.tests;\n          worldwide.deathPerPerson = data.population / data.deaths;\n          worldwide.timeline = null;\n          // worldwide.todayUpdated = 0;\n          setCountries((countries) => countries.concat(worldwide));\n          setCountry(worldwide);\n        });\n    };\n    selectedCountry();\n  }, []);\n\n  useEffect(() => {\n    const selectedCountry = async () => {\n      await fetch(`https://disease.sh/v3/covid-19/countries?yesterday=true`)\n        .then((response) => response.json())\n        .then((data) => {\n          const countriesS = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n            cases: country.cases,\n            todayCases: country.todayCases,\n            recovered: country.recovered,\n            todayRecovered: country.todayRecovered,\n            deaths: country.deaths,\n            todayDeaths: country.todayDeaths,\n            flag: country.countryInfo.flag,\n            center: {\n              lat: country.countryInfo.lat,\n              lng: country.countryInfo.long,\n            },\n            zoom: 4,\n            active: country.active,\n            critical: country.critical,\n            tests: country.tests,\n            casePerPerson: country.oneCasePerPeople,\n            testPerPerson: country.oneTestPerPeople,\n            deathPerPerson: country.oneDeathPerPeople,\n            timeline: null,\n            // todayUpdated: 0,\n          }));\n          setCountries((countries) => countries.concat(countriesS));\n        });\n    };\n    selectedCountry();\n  }, []);\n\n  // useEffect(() => {\n  //   const selectedCountry = async () => {\n  //     await fetch(\"https://disease.sh/v3/covid-19/all?yesterday=false\")\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         const index = countries.findIndex((e, index) => {\n  //           return e.name === \"WorldWide\";\n  //         });\n  //         if (countries[index] !== -1 && countries.length > 1) {\n  //           countries[index] = {\n  //             ...countries[index], //spread notation for the selected object\n  //             todayUpdated: data.todayCases,\n  //           };\n  //           setCountries(countries);\n  //         }\n  //       });\n  //   };\n  //   selectedCountry();\n  // }, [country]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\" id=\"header\">\n        <Header\n          countries={countries}\n          changeCountry={onChange}\n          country={country}\n          casesType={casesType}\n          setCasesType={setCasesType}\n          setDataShowing={setDataShowing}\n          setGraphSlider={setGraphSlider}\n          setSortType={setSortType}\n          setCountry={setCountry}\n          isMobile={isMobile}\n        />\n      </div>\n      <div className=\"app__body\" id=\"bodyExtension\">\n        <div className=\"app__dataLayout\">\n          <DataLayout\n            country={country}\n            countries={countries}\n            casesType={casesType}\n            setSortType={setSortType}\n            sortType={sortType}\n            dataShowing={dataShowing}\n            setDataShowing={setDataShowing}\n          />\n        </div>\n        <div className=\"app__map_wrapper\">\n          <Map countries={countries} country={country} casesType={casesType} />\n        </div>\n        <div className=\"app__graph\">\n          <div className=\"app__graph_graph\">\n            <LineGraph\n              casesType={casesType}\n              country={country}\n              setCountry={setCountry}\n              graphSlider={graphSlider}\n              setGraphSlider={setGraphSlider}\n              setSliderMax={setGraphSliderMax}\n            />\n          </div>\n          <Slider\n            graphSlider={graphSlider}\n            setGraphSlider={setGraphSlider}\n            sliderMax={graphsliderMax}\n          />\n        </div>\n      </div>\n      <div className=\"app__footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n// After user zoom out, if different country selected from dropdown, map doesn't zoom back to it. Check the setZoom on country change\n// When a country is selected table scrolls to that country and highlights raw\n// Check out why the map circles load twice when deaths selected. Maybe cuz \"cases\" is set to default\n\n// total button not centered on apple\n"],"sourceRoot":""}