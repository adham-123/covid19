{"version":3,"sources":["redux/reducers/selectedCountry.js","Components/Header/DropDown.js","Components/InfoBox.js","redux/reducers/conRender.js","Components/Header/Header.js","redux/reducers/graphData.js","Components/LineGraph.js","Components/Slider.js","Components/Table.js","Components/DataLayout.js","Components/GoogleMap.js","Components/Map.js","Components/Footer.js","redux/reducers/countries.js","Images/earth.jpg","redux/reducers/worldwide.js","App.js","redux/configureStore.js","index.js"],"names":["selectedCountry","createSlice","name","initialState","country","reducers","changeSelectedCountry","state","action","payload","changeSelectedCountryTimeline","timeline","actions","clearInput","document","getElementById","value","fillInput","DropDown","dispatch","useDispatch","countries","useSelector","useEffect","className","type","size","id","list","placeholder","onChange","e","event","target","countryS","find","c","undefined","activeElement","blur","onFocus","onDoubleClick","onBlur","map","InfoBox","props","styling","padding","width","color","borderRadius","radius","backgroundColor","bcolor","boxShadow","shadow","margin","fontSize","active","activeColor","style","marginLeft","marginL","onClick","click","content","conRender","casesType","sortingType","dataShowing","graphSliderValue","graphSliderMaxValue","casesTypeCases","casesTypeRecovered","casesTypeDeaths","sortTable","sortType","showTodayData","dataShow","changeGraphSliderVal","changeGraphSliderMaxValue","Header","window","onscroll","header","wholeHeader","body","isMobile","pageYOffset","classList","remove","add","stickyFunction","border","cursor","outline","alt","src","flag","graphData","cases","deaths","recovered","displayedData","setgraphDataCountry","setgraphDataCases","emptyUpGraphDisplayData","changeGraphDisplayData","sliderValue","maxValue","slice","nf","Intl","NumberFormat","options","animation","duration","responsiveAnimationDuration","legend","display","elements","points","line","tension","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","format","hover","animationDuration","scales","xAxes","gridLines","time","tooltipFormat","yAxes","ticks","callback","index","values","LineGraph","graphCountry","graphCases","graphDeaths","graphRecovered","graphDisplayData","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","a","fetch","then","response","json","message","fetchData","fetchAllData","setTimeout","length","borderColor","maxHeight","position","height","datasets","pointRadius","fill","hoverRadius","Slider","minWidth","min","max","step","Table","flexDirection","fontWeight","critical","tests","casePerPerson","deathPerPerson","testPerPerson","todayCases","todayRecovered","todayDeaths","nFormatter","num","symbol","formatIndex","findIndex","toFixed","DataLayout","borderBottom","borderTopRightRadius","borderTopLeftRadius","textAlign","verticalAlign","fontFamily","borderLeft","paddingLeft","paddingBottom","containerStyle","CircleComponent","setShowingInfoWindow","setCurrentCountry","currentZoom","onClose","casesOptions","strokeColor","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","zIndex","recoveredOptions","deathsOptions","selectedOptions","selectedType","center","Math","sqrt","onMouseOver","onMouseOut","Maps","useState","showingInfoWindow","currentCountry","setCurrentZoom","mapContainerStyle","zoom","onZoomChanged","this","getZoom","streetViewControl","mapTypeControl","maxZoom","minZoom","onCloseClick","React","memo","Map","href","rel","Footer","fetchCountries","createAsyncThunk","res","loading","pushToCountries","updateCountries","extraReducers","pending","fulfilled","countriesS","countryInfo","iso2","lat","lng","long","oneCasePerPeople","oneTestPerPeople","oneDeathPerPeople","rejected","fetchWorldwide","worldwide","pic","population","ErrorBoundary","hasError","error","errorInfo","children","Component","App","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","sorted","sortedData","sort","b","sortData","reducer","combineReducers","conrenderReducer","firstMiddleware","store","next","configureStore","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6d5e41d1.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst selectedCountry = createSlice({\r\n  name: \"selectedCountry\",\r\n  initialState: {\r\n    country: {},\r\n  },\r\n  reducers: {\r\n    changeSelectedCountry: (state, action) => {\r\n      state.country = action.payload;\r\n    },\r\n    // changeSelectedCountryTimeline: (state, action) => {\r\n    //   state = {\r\n    //     ...state,\r\n    //     country: { ...state.country, timeline: [action.payload] },\r\n    //   };\r\n    // },\r\n    changeSelectedCountryTimeline: (state, action) => {\r\n      const { timeline } = action.payload;\r\n      state.country = { ...state.country, timeline: timeline };\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  changeSelectedCountry,\r\n  changeSelectedCountryTimeline,\r\n} = selectedCountry.actions;\r\n\r\nexport default selectedCountry.reducer;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeSelectedCountry } from \"../../redux/reducers/selectedCountry\";\r\n\r\nconst clearInput = () => {\r\n  document.getElementById(\"myInput\").value = null;\r\n};\r\nconst fillInput = (country) => {\r\n  document.getElementById(\"myInput\").value = country;\r\n};\r\n\r\nfunction DropDown() {\r\n  const dispatch = useDispatch();\r\n  const countries = useSelector((state) => state.countries.countries);\r\n  const selectedCountry = useSelector((state) => state.selectedCountry.country);\r\n\r\n  useEffect(() => {\r\n    fillInput(selectedCountry.name);\r\n  }, [selectedCountry]);\r\n\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    let countryS = countries.find((c) => c.name === value);\r\n\r\n    if (countryS !== undefined) {\r\n      dispatch(changeSelectedCountry(countryS));\r\n      document.activeElement.blur();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header__dropdown\">\r\n      <input\r\n        type=\"text\"\r\n        size=\"8\"\r\n        name=\"myInput\"\r\n        id=\"myInput\"\r\n        list=\"dropdown__countries\"\r\n        className=\"header__dropbtn\"\r\n        placeholder=\"Search Country\"\r\n        onChange={(e) => onChange(e)}\r\n        onFocus={() => clearInput()}\r\n        onDoubleClick={() => clearInput()}\r\n        onBlur={() => fillInput(selectedCountry.name)}\r\n      />\r\n      <datalist id=\"dropdown__countries\">\r\n        {countries.map((country) => (\r\n          <option key={country.value + country.name} value={country.name} />\r\n        ))}\r\n      </datalist>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDown;\r\n","import React from \"react\";\r\n\r\nimport \".././Styling/infoBox.css\";\r\n\r\nfunction InfoBox(props) {\r\n  let styling = {\r\n    padding: props.padding,\r\n    width: props.width,\r\n    color: props.color,\r\n    borderRadius: props.radius,\r\n    backgroundColor: props.bcolor,\r\n    boxShadow: props.shadow,\r\n    margin: props.margin,\r\n    fontSize: props.fontSize,\r\n  };\r\n\r\n  if (props.active) {\r\n    styling = {\r\n      padding: props.padding,\r\n      width: props.width,\r\n      color: props.activeColor,\r\n      borderRadius: props.radius,\r\n      backgroundColor: props.bcolor,\r\n      margin: props.margin,\r\n      fontSize: props.fontSize,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"infoBox\"\r\n      style={{ margin: props.margin, marginLeft: props.marginL }}\r\n    >\r\n      <button\r\n        className=\"infoBox__button\"\r\n        onClick={props.click}\r\n        style={styling}\r\n        onFocus={props.onFocus}\r\n      >\r\n        <span>\r\n          <p>{props.content}</p>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst conRender = createSlice({\r\n  name: \"conRender\",\r\n  initialState: {\r\n    casesType: \"cases\",\r\n    sortingType: \"\",\r\n    dataShowing: \"all\",\r\n    graphSliderValue: 200,\r\n    graphSliderMaxValue: 300,\r\n  },\r\n  reducers: {\r\n    casesTypeCases: (state) => {\r\n      state.casesType = \"cases\";\r\n    },\r\n    casesTypeRecovered: (state) => {\r\n      state.casesType = \"recovered\";\r\n    },\r\n    casesTypeDeaths: (state) => {\r\n      state.casesType = \"deaths\";\r\n    },\r\n    sortTable: (state, action) => {\r\n      const { sortType } = action.payload;\r\n      state.sortingType = sortType;\r\n    },\r\n    showTodayData: (state, action) => {\r\n      const { dataShow } = action.payload;\r\n      state.dataShowing = dataShow;\r\n    },\r\n    changeGraphSliderVal: (state, action) => {\r\n      const { value } = action.payload;\r\n      state.graphSliderValue = value;\r\n    },\r\n    changeGraphSliderMaxValue: (state, action) => {\r\n      state.graphSliderMaxValue = action.payload.value;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  casesTypeCases,\r\n  casesTypeRecovered,\r\n  casesTypeDeaths,\r\n  sortTable,\r\n  showTodayData,\r\n  changeGraphSliderVal,\r\n  changeGraphSliderMaxValue,\r\n} = conRender.actions;\r\n\r\nexport default conRender.reducer;\r\n","import React from \"react\";\r\n\r\nimport DropDown from \"./DropDown\";\r\nimport InfoBox from \"../../Components/InfoBox\";\r\n\r\nimport \"../../Styling/header.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  casesTypeCases,\r\n  casesTypeDeaths,\r\n  casesTypeRecovered,\r\n  changeGraphSliderVal,\r\n  showTodayData,\r\n} from \"../../redux/reducers/conRender\";\r\nimport { changeSelectedCountry } from \"../../redux/reducers/selectedCountry\";\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const casesType = useSelector((state) => state.conRender.casesType);\r\n  const countries = useSelector((state) => state.countries.countries);\r\n  const selectedCountry = useSelector((state) => state.selectedCountry.country);\r\n  const c = countries.find((c) => c.name === \"WorldWide\");\r\n\r\n  const stickyFunction = () => {\r\n    var header = document.getElementById(\"myHeader\");\r\n    var wholeHeader = document.getElementById(\"header\");\r\n    var body = document.getElementById(\"bodyExtension\");\r\n    // var sticky = header.offsetTop;\r\n\r\n    if (props.isMobile.width < 710) {\r\n      if (window.pageYOffset < 50) {\r\n        header.classList.remove(\"sticky\");\r\n        body.classList.remove(\"bodyExtension\");\r\n      } else {\r\n        header.classList.add(\"sticky\");\r\n        body.classList.add(\"bodyExtension\");\r\n      }\r\n    } else {\r\n      wholeHeader.classList.add(\"headerSticky\");\r\n    }\r\n  };\r\n\r\n  window.onscroll = () => {\r\n    stickyFunction();\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <button\r\n        className=\"header__title\"\r\n        onClick={() => (\r\n          dispatch(casesTypeCases()),\r\n          dispatch(showTodayData({ dataShow: \"all\" })),\r\n          dispatch(changeGraphSliderVal({ value: 200 })),\r\n          // dispatch(sortTable({ sortType: \"\" })),\r\n          c !== undefined ? dispatch(changeSelectedCountry(c)) : null\r\n        )}\r\n        style={{\r\n          border: \"0px\",\r\n          backgroundColor: \"rgba(230, 230, 230,1)\",\r\n          cursor: \"pointer\",\r\n          outline: \"none\",\r\n        }}\r\n      >\r\n        Covid 19 Tracker\r\n      </button>\r\n\r\n      <img\r\n        alt={`${selectedCountry.name} Flag`}\r\n        src={selectedCountry.flag}\r\n        className=\"header_image\"\r\n      />\r\n\r\n      <div className=\"header__dd_img\" id=\"myHeader\">\r\n        <div className=\"header__right\">\r\n          <DropDown />\r\n        </div>\r\n\r\n        <div className=\"header__infoBox\">\r\n          <InfoBox\r\n            content=\"Cases\"\r\n            active={casesType === \"cases\"}\r\n            click={() => dispatch(casesTypeCases())}\r\n            padding={props.isMobile.width < 365 ? \"3px\" : \"10px\"}\r\n            activeColor=\"rgb(225, 0, 0)\"\r\n            margin=\"1px\"\r\n            fontSize={props.isMobile.width < 420 ? \"12px\" : \"15px\"}\r\n          />\r\n          <InfoBox\r\n            content=\"Recovered\"\r\n            active={casesType === \"recovered\"}\r\n            click={() => dispatch(casesTypeRecovered())}\r\n            padding={props.isMobile.width < 365 ? \"3px\" : \"10px\"}\r\n            activeColor=\"rgb(70, 250, 70)\"\r\n            margin=\"1px\"\r\n            fontSize={props.isMobile.width < 420 ? \"12px\" : \"15px\"}\r\n          />\r\n          <InfoBox\r\n            content=\"Deaths\"\r\n            active={casesType === \"deaths\"}\r\n            click={() => dispatch(casesTypeDeaths())}\r\n            padding={props.isMobile.width < 365 ? \"3px\" : \"10px\"}\r\n            activeColor=\"rgb(50, 50, 50)\"\r\n            margin=\"1px\"\r\n            fontSize={props.isMobile.width < 420 ? \"12px\" : \"15px\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst graphData = createSlice({\r\n  name: \"graphData\",\r\n  initialState: {\r\n    country: \"\",\r\n    cases: [],\r\n    deaths: [],\r\n    recovered: [],\r\n    displayedData: [],\r\n  },\r\n\r\n  reducers: {\r\n    setgraphDataCountry: (state, action) => {\r\n      state.country = action.payload;\r\n    },\r\n    setgraphDataCases: (state, action) => {\r\n      const { cases, recovered, deaths } = action.payload;\r\n      state.cases = cases;\r\n      state.recovered = recovered;\r\n      state.deaths = deaths;\r\n    },\r\n    emptyUpGraphDisplayData: (state, action) => {\r\n      state.displayedData = [];\r\n    },\r\n    changeGraphDisplayData: (state, action) => {\r\n      const { sliderValue, type, maxValue } = action.payload;\r\n      type === \"cases\"\r\n        ? (state.displayedData = state.cases.slice(sliderValue, maxValue))\r\n        : type === \"recovered\"\r\n        ? (state.displayedData = state.recovered.slice(sliderValue, maxValue))\r\n        : (state.displayedData = state.deaths.slice(sliderValue, maxValue));\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setgraphDataCountry,\r\n  setgraphDataCases,\r\n  emptyUpGraphDisplayData,\r\n  changeGraphDisplayData,\r\n} = graphData.actions;\r\n\r\nexport default graphData.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  changeGraphSliderMaxValue,\r\n  changeGraphSliderVal,\r\n} from \"../redux/reducers/conRender\";\r\nimport {\r\n  setgraphDataCountry,\r\n  setgraphDataCases,\r\n  emptyUpGraphDisplayData,\r\n  changeGraphDisplayData,\r\n} from \"../redux/reducers/graphData\";\r\n\r\nconst nf = new Intl.NumberFormat();\r\n\r\nconst options = {\r\n  animation: {\r\n    duration: 0,\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n  legend: {\r\n    display: true,\r\n  },\r\n  elements: {\r\n    points: {\r\n      radius: 0,\r\n    },\r\n    line: {\r\n      tension: 0.4, // disables bezier curves\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return nf.format(tooltipItem.value);\r\n      },\r\n    },\r\n  },\r\n  hover: {\r\n    mode: \"index\",\r\n    intersect: true,\r\n    animationDuration: 0,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n        },\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return nf.format(value);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction LineGraph() {\r\n  const dispatch = useDispatch();\r\n  const country = useSelector((state) => state.selectedCountry.country);\r\n\r\n  const graphCountry = useSelector((state) => state.graphData.country);\r\n  const graphCases = useSelector((state) => state.graphData.cases);\r\n  const graphDeaths = useSelector((state) => state.graphData.deaths);\r\n  const graphRecovered = useSelector((state) => state.graphData.recovered);\r\n  const graphDisplayData = useSelector(\r\n    (state) => state.graphData.displayedData\r\n  );\r\n\r\n  const graphSliderValue = useSelector(\r\n    (state) => state.conRender.graphSliderValue\r\n  );\r\n  const graphSliderMaxValue = useSelector(\r\n    (state) => state.conRender.graphSliderMaxValue\r\n  );\r\n\r\n  const casesType = useSelector((state) => state.conRender.casesType);\r\n\r\n  const buildChartData = (data) => {\r\n    let chartData = [];\r\n    let lastDataPoint;\r\n    if (data !== undefined) {\r\n      for (let date in data) {\r\n        if (lastDataPoint) {\r\n          let newDataPoint = {\r\n            x: date,\r\n            y: data[date] - lastDataPoint < 0 ? 0 : data[date] - lastDataPoint,\r\n          };\r\n          chartData.push(newDataPoint);\r\n        }\r\n\r\n        lastDataPoint = data[date] < 0 ? 0 : data[date];\r\n      }\r\n      return chartData;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (country.name !== \"WorldWide\" && country.name !== undefined) {\r\n      const fetchData = async () => {\r\n        await fetch(\r\n          `https://disease.sh/v3/covid-19/historical/${country.name}?lastdays=all`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (\r\n              data.message ===\r\n              \"Country not found or doesn't have any historical data\"\r\n            ) {\r\n              return null;\r\n            }\r\n\r\n            dispatch(setgraphDataCountry(data.country));\r\n\r\n            dispatch(\r\n              setgraphDataCases({\r\n                cases: buildChartData(data.timeline.cases),\r\n                recovered: buildChartData(data.timeline.recovered),\r\n                deaths: buildChartData(data.timeline.deaths),\r\n              })\r\n            );\r\n\r\n            dispatch(changeGraphSliderVal({ value: 150 }));\r\n          });\r\n      };\r\n      fetchData();\r\n    } else {\r\n      const fetchAllData = async () => {\r\n        await fetch(\r\n          `https://disease.sh/v3/covid-19/historical/all?lastdays=all`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            data.country = \"WorldWide\";\r\n\r\n            dispatch(setgraphDataCountry(data.country));\r\n\r\n            dispatch(\r\n              setgraphDataCases({\r\n                cases: buildChartData(data.cases),\r\n                recovered: buildChartData(data.recovered),\r\n                deaths: buildChartData(data.deaths),\r\n              })\r\n            );\r\n\r\n            dispatch(changeGraphSliderVal({ value: 200 }));\r\n          });\r\n      };\r\n      fetchAllData();\r\n    }\r\n  }, [country.name]);\r\n\r\n  useEffect(() => {\r\n    let sliderValue = graphSliderMaxValue - graphSliderValue;\r\n    setTimeout(function () {\r\n      dispatch(\r\n        changeGraphDisplayData({\r\n          sliderValue: sliderValue,\r\n          type: casesType,\r\n          maxValue: graphSliderMaxValue,\r\n        })\r\n      );\r\n    });\r\n  }, [graphSliderValue]);\r\n\r\n  //Slider useEffect to so the data showing the value user set on the slider\r\n  useEffect(() => {\r\n    if (graphDisplayData) {\r\n      graphCountry === \"WorldWide\"\r\n        ? dispatch(changeGraphSliderVal({ value: 200 }))\r\n        : dispatch(changeGraphSliderVal({ value: 150 }));\r\n\r\n      let maxValue =\r\n        casesType === \"cases\"\r\n          ? graphCases.length\r\n          : casesType === \"recovered\"\r\n          ? graphRecovered.length\r\n          : graphDeaths.length;\r\n      dispatch(\r\n        changeGraphSliderMaxValue({\r\n          value: maxValue,\r\n        })\r\n      );\r\n\r\n      dispatch(emptyUpGraphDisplayData({ type: \"\" }));\r\n      let sliderValue = graphSliderMaxValue - graphSliderValue;\r\n      setTimeout(function () {\r\n        dispatch(\r\n          changeGraphDisplayData({\r\n            sliderValue: sliderValue,\r\n            type: casesType,\r\n            maxValue: graphSliderMaxValue,\r\n          })\r\n        );\r\n      });\r\n    }\r\n  }, [graphCases, graphRecovered, graphDeaths, graphCountry, casesType]);\r\n\r\n  const color =\r\n    casesType === \"cases\"\r\n      ? \"rgba(200, 20, 50, 0.5)\"\r\n      : casesType === \"recovered\"\r\n      ? \"rgba(0, 200, 50, 0.5)\"\r\n      : \"rgba(100, 100, 100, 0.5)\";\r\n\r\n  const borderColor =\r\n    casesType === \"cases\"\r\n      ? \"rgb(200, 20, 50)\"\r\n      : casesType === \"recovered\"\r\n      ? \"rgb(0, 200, 50)\"\r\n      : \"rgb(100, 100, 100)\";\r\n\r\n  if (graphCountry !== country.name) {\r\n    return (\r\n      <div>\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxHeight: \"100%\",\r\n        position: \"relative\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      {/* <div className=\"linegraph__graphbuttons\">\r\n        <h2 style={{ color: borderColor }}>{cName}</h2>\r\n        <InfoBox\r\n          content=\"Total\"\r\n          margin=\"0px\"\r\n          marginL=\"5px\"\r\n          bcolor={borderColor}\r\n          shadow={` 0 6px ${color}`}\r\n          click={() => setDaily(false)}\r\n          activeColor=\"rgb(255, 255, 255)\"\r\n          active={daily === false}\r\n          color=\"rgb(0, 0, 0)\"\r\n        />\r\n        <InfoBox\r\n          content=\"Daily\"\r\n          margin=\"0px\"\r\n          marginL=\"5px\"\r\n          bcolor={borderColor}\r\n          shadow={` 0 6px ${color}`}\r\n          click={() => setDaily(true)}\r\n          activeColor=\"rgb(255, 255, 255)\"\r\n          active={daily === true}\r\n          color=\"rgb(0, 0, 0)\"\r\n        />\r\n      </div> */}\r\n\r\n      <Line\r\n        options={options}\r\n        data={{\r\n          datasets: [\r\n            {\r\n              backgroundColor: color,\r\n              borderColor: borderColor,\r\n              data: graphDisplayData.length > 1 ? graphDisplayData : null,\r\n              pointRadius: 1,\r\n              fill: true,\r\n              label: graphCountry + \" \" + casesType,\r\n              hoverRadius: 5,\r\n            },\r\n            // {\r\n            //   backgroundColor: \"rgba(25, 0, 255, 0.7)\",\r\n            //   borderColor: \"rgb(25, 0, 255)\",\r\n            //   data: total,\r\n            //   pointRadius: 1,\r\n            //   fill: false,\r\n            //   label: \"Total\",\r\n            //   hoverRadius: 5,\r\n            // },\r\n          ],\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\n\r\nimport \"../Styling/slider.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { changeGraphSliderVal } from \"../redux/reducers/conRender\";\r\n\r\nfunction Slider(props) {\r\n  const dispatch = useDispatch();\r\n  const graphSliderValue = useSelector(\r\n    (state) => state.conRender.graphSliderValue\r\n  );\r\n  const graphSliderMaxValue = useSelector(\r\n    (state) => state.conRender.graphSliderMaxValue\r\n  );\r\n\r\n  return (\r\n    <div className=\"slidecontainer\">\r\n      <p style={{ minWidth: \"110px\" }}>Past {graphSliderValue} Days:</p>\r\n      <input\r\n        type=\"range\"\r\n        min=\"10\"\r\n        max={graphSliderMaxValue}\r\n        step=\"1\"\r\n        value={graphSliderValue}\r\n        onChange={(e) =>\r\n          dispatch(changeGraphSliderVal({ value: e.target.value }))\r\n        }\r\n        className=\"slider\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\n\r\nimport \"../Styling/table.css\";\r\nimport InfoBox from \"./InfoBox\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { showTodayData, sortTable } from \"../redux/reducers/conRender\";\r\n\r\nconst nf = new Intl.NumberFormat();\r\n\r\nfunction Table() {\r\n  const dispatch = useDispatch();\r\n  const sortingType = useSelector((state) => state.conRender.sortingType);\r\n  const dataShowing = useSelector((state) => state.conRender.dataShowing);\r\n  const countries = useSelector((state) => state.countries.countries);\r\n\r\n  // useEffect(() => {\r\n  //   return function scrollTable() {\r\n  //     var elem = document.getElementById(props.country.name);\r\n  //     elem.scrollIntoView(true);\r\n  //   };\r\n  // }, [props.country]);\r\n\r\n  // click = () => {\r\n  //   this.scr.scrollIntoView();\r\n  // }\r\n\r\n  // const handleButtonClick = (scrol) => {\r\n  //   document.getElementById(scrol).scrollIntoView({\r\n  //     behavior: \"smooth\",\r\n  //     block: \"start\",\r\n  //     inline: \"nearest\",\r\n  //   });\r\n  // };\r\n\r\n  // var rows = document.querySelectorAll(props.country.name);\r\n\r\n  // // line is zero-based\r\n  // // line is the row number that you want to see into view after scroll\r\n  // rows[9].scrollIntoView({\r\n  //   behavior: \"smooth\",\r\n  //   block: \"center\",\r\n  // });\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          fontSize: \"13px\",\r\n        }}\r\n      >\r\n        <InfoBox\r\n          content=\"All\"\r\n          click={() => dispatch(showTodayData({ dataShow: \"all\" }))}\r\n          onFocus={() => dispatch(sortTable({ sortType: \"\" }))}\r\n          width=\"50px\"\r\n          margin=\"0px\"\r\n          active={dataShowing === \"all\"}\r\n          color=\"rgb(40, 40, 40)\"\r\n          activeColor=\"rgb(250, 250, 250)\"\r\n        />\r\n        <InfoBox\r\n          content=\"Today\"\r\n          click={() => dispatch(showTodayData({ dataShow: \"today\" }))}\r\n          onFocus={() => dispatch(sortTable({ sortType: \"\" }))}\r\n          width=\"60px\"\r\n          margin=\"0px\"\r\n          active={dataShowing === \"today\"}\r\n          color=\"rgb(40, 40, 40)\"\r\n          activeColor=\"rgb(250, 250, 250)\"\r\n        />\r\n      </span>\r\n\r\n      <div className=\"table__data\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                onClick={() => dispatch(sortTable({ sortType: \"countries\" }))}\r\n              >\r\n                {sortingType === \"countries\" ? (\r\n                  <p>Country ▾</p>\r\n                ) : (\r\n                  <span>Country</span>\r\n                )}\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  dataShowing === \"all\"\r\n                    ? () => dispatch(sortTable({ sortType: \"cases\" }))\r\n                    : () => dispatch(sortTable({ sortType: \"todayCases\" }))\r\n                }\r\n              >\r\n                {dataShowing === \"today\" ? (\r\n                  <p style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                    Today\r\n                  </p>\r\n                ) : null}\r\n                {sortingType === \"cases\" || sortingType === \"todayCases\" ? (\r\n                  <p>Cases ▾</p>\r\n                ) : (\r\n                  <span>Cases</span>\r\n                )}\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  dataShowing === \"all\"\r\n                    ? () => dispatch(sortTable({ sortType: \"recovered\" }))\r\n                    : () => dispatch(sortTable({ sortType: \"todayRecovered\" }))\r\n                }\r\n              >\r\n                {dataShowing === \"today\" ? (\r\n                  <p style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                    Today\r\n                  </p>\r\n                ) : null}\r\n                {sortingType === \"recovered\" ||\r\n                sortingType === \"todayRecovered\" ? (\r\n                  <p>Recovered ▾</p>\r\n                ) : (\r\n                  <span>Recovered</span>\r\n                )}\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  dataShowing === \"all\"\r\n                    ? () => dispatch(sortTable({ sortType: \"deaths\" }))\r\n                    : () => dispatch(sortTable({ sortType: \"todayDeaths\" }))\r\n                }\r\n              >\r\n                {dataShowing === \"today\" ? (\r\n                  <p style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                    Today\r\n                  </p>\r\n                ) : null}\r\n                {sortingType === \"deaths\" || sortingType === \"todayDeaths\" ? (\r\n                  <p>Deaths ▾</p>\r\n                ) : (\r\n                  <span>Deaths</span>\r\n                )}\r\n              </th>\r\n              <th onClick={() => dispatch(sortTable({ sortType: \"active\" }))}>\r\n                {sortingType === \"active\" ? (\r\n                  <p>Active ▾</p>\r\n                ) : (\r\n                  <span>Active</span>\r\n                )}\r\n              </th>\r\n              <th>Critical</th>\r\n              <th>Tests</th>\r\n              <th>Case/Person</th>\r\n              <th>Death/Person</th>\r\n              <th>Test/Person</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {countries.map((country, index) =>\r\n              dataShowing === \"all\" ? (\r\n                <tr key={index} id={country.name}>\r\n                  <td>{country.name}</td>\r\n                  <td>{nf.format(country.cases)}</td>\r\n                  <td>{nf.format(country.recovered)}</td>\r\n                  <td>{nf.format(country.deaths)}</td>\r\n                  <td>{nf.format(country.active)}</td>\r\n                  <td>{nf.format(country.critical)}</td>\r\n                  <td>{nf.format(country.tests)}</td>\r\n                  <td>{nf.format(country.casePerPerson)}</td>\r\n                  <td>{nf.format(country.deathPerPerson)}</td>\r\n                  <td>{nf.format(country.testPerPerson)}</td>\r\n                </tr>\r\n              ) : (\r\n                <tr key={index} id={country.name}>\r\n                  <td>{country.name}</td>\r\n                  <td>{nf.format(country.todayCases)}</td>\r\n                  <td>{nf.format(country.todayRecovered)}</td>\r\n                  <td>{nf.format(country.todayDeaths)}</td>\r\n                  <td>{nf.format(country.active)}</td>\r\n                  <td>{nf.format(country.critical)}</td>\r\n                  <td>{nf.format(country.tests)}</td>\r\n                  <td>{nf.format(country.casePerPerson)}</td>\r\n                  <td>{nf.format(country.deathPerPerson)}</td>\r\n                  <td>{nf.format(country.testPerPerson)}</td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nimport \"../Styling/dataLayout.css\";\r\nimport Table from \"../Components/Table.js\";\r\n// import PieChart from \"./PieChart\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst nf = new Intl.NumberFormat();\r\n\r\nfunction nFormatter(num) {\r\n  const format = [\r\n    { value: 1e18, symbol: \"E\" },\r\n    { value: 1e15, symbol: \"P\" },\r\n    { value: 1e12, symbol: \"T\" },\r\n    { value: 1e9, symbol: \"B\" },\r\n    { value: 1e6, symbol: \"M\" },\r\n    { value: 1e3, symbol: \"k\" },\r\n    { value: 1, symbol: \"\" },\r\n  ];\r\n  const formatIndex = format.findIndex((data) => num >= data.value);\r\n  return (\r\n    (num / format[formatIndex === -1 ? 6 : formatIndex].value).toFixed(2) +\r\n    format[formatIndex === -1 ? 6 : formatIndex].symbol\r\n  );\r\n}\r\n\r\nfunction DataLayout() {\r\n  const selectedCountry = useSelector((state) => state.selectedCountry.country);\r\n  return (\r\n    <div className=\"dataLayout\">\r\n      <div className=\"datalayout__overview\">\r\n        <div\r\n          style={{\r\n            borderBottom: \"1px solid gray\",\r\n            width: \"100%\",\r\n            display: \"table\",\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              padding: \"10px\",\r\n              backgroundColor: \"rgb(255, 255, 255)\",\r\n              borderTopRightRadius: \"9px\",\r\n              borderTopLeftRadius: \"9px\",\r\n              boxShadow:\r\n                \"inset 100px 0px 100px -50px rgb(170, 170, 170), inset -100px 0px 100px -50px rgb(170, 170, 170)\",\r\n              textAlign: \"center\",\r\n              verticalAlign: \"middle\",\r\n            }}\r\n          >\r\n            <b style={{ fontSize: \"22px\", fontFamily: \"cursive\" }}>\r\n              {selectedCountry.name}\r\n            </b>\r\n            Overview\r\n          </p>\r\n        </div>\r\n        <div className=\"datalayout__overview_in\">\r\n          <div\r\n            className=\"datalayout__overview_box\"\r\n            style={{ borderLeft: \"hidden\" }}\r\n          >\r\n            <p className=\"datalayout__overview_title\">\r\n              Cases <br />\r\n              <span className=\"datalayout__overview_boldnumber\">\r\n                {nFormatter(selectedCountry.cases)}\r\n              </span>\r\n              <br />\r\n              <span className=\"datalayout__overview_dailynumber\">\r\n                + {nf.format(selectedCountry.todayCases)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Recovered <br />\r\n              <span className=\"datalayout__overview_boldnumber\">\r\n                {nFormatter(selectedCountry.recovered)}\r\n              </span>{\" \"}\r\n              <br />\r\n              <span className=\"datalayout__overview_dailynumber\">\r\n                + {nf.format(selectedCountry.todayRecovered)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Deaths <br />\r\n              <span className=\"datalayout__overview_boldnumber\">\r\n                {nFormatter(selectedCountry.deaths)}\r\n              </span>{\" \"}\r\n              <br />\r\n              <span className=\"datalayout__overview_dailynumber\">\r\n                + {nf.format(selectedCountry.todayDeaths)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"datalayout__overview_in\">\r\n          <div\r\n            className=\"datalayout__overview_box\"\r\n            style={{ borderLeft: \"hidden\" }}\r\n          >\r\n            <p className=\"datalayout__overview_title\">\r\n              Active <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(selectedCountry.active)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Critical <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(selectedCountry.critical)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Tests <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(selectedCountry.tests)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"datalayout__overview_in\">\r\n          <div\r\n            className=\"datalayout__overview_box\"\r\n            style={{ borderLeft: \"hidden\" }}\r\n          >\r\n            <p className=\"datalayout__overview_title\">\r\n              Case/Person <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(selectedCountry.casePerPerson)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Test/Person <br />\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(selectedCountry.testPerPerson)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"datalayout__overview_box\">\r\n            <p className=\"datalayout__overview_title\">\r\n              Deaths/Person <br />{\" \"}\r\n              <span className=\"datalayout__overview_number\">\r\n                {nFormatter(selectedCountry.deathPerPerson)}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <p\r\n          style={{ paddingLeft: \"8px\", paddingBottom: \"2px\", fontSize: \"10px\" }}\r\n        >\r\n          <b>Case/Person</b> = <b>X</b> (Every <b>X</b> people there's one Case\r\n          )\r\n        </p>\r\n      </div>\r\n      <div className=\"datalayout__table\">\r\n        <Table />\r\n      </div>\r\n      {/* <div className=\"datalayout__graph_pie\">\r\n        <PieChart countries={countries} casesType={casesType} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataLayout;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  Circle,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nfunction CircleComponent({\r\n  setShowingInfoWindow,\r\n  setCurrentCountry,\r\n  country,\r\n  currentZoom,\r\n  casesType,\r\n  onClose,\r\n}) {\r\n  if (country.name === \"WorldWide\") {\r\n    return null;\r\n  }\r\n\r\n  const options = {\r\n    casesOptions: {\r\n      strokeColor: \"rgba(255, 0, 0)\",\r\n      strokeWeight: 0.5,\r\n      fillColor: \"rgba(255, 0, 0)\",\r\n      fillOpacity: 0.35,\r\n      clickable: true,\r\n      draggable: false,\r\n      editable: false,\r\n      visible: true,\r\n      zIndex: 1,\r\n    },\r\n    recoveredOptions: {\r\n      strokeColor: \"rgba(0, 255, 150)\",\r\n      strokeWeight: 1.5,\r\n      fillColor: \"rgba(0, 255, 0)\",\r\n      fillOpacity: 0.35,\r\n      clickable: true,\r\n      draggable: false,\r\n      editable: false,\r\n      visible: true,\r\n      zIndex: 1,\r\n    },\r\n    deathsOptions: {\r\n      strokeColor: \"rgba(20, 20, 20)\",\r\n      strokeWeight: 1.5,\r\n      fillColor: \"rgba(0, 0, 0)\",\r\n      fillOpacity: 0.35,\r\n      clickable: true,\r\n      draggable: false,\r\n      editable: false,\r\n      visible: true,\r\n      zIndex: 1,\r\n    },\r\n  };\r\n\r\n  const onCircleClick = () => {\r\n    setCurrentCountry(country);\r\n    setShowingInfoWindow(true);\r\n  };\r\n\r\n  const selectedOptions =\r\n    casesType === \"cases\"\r\n      ? options.casesOptions\r\n      : casesType === \"deaths\"\r\n      ? options.deathsOptions\r\n      : options.recoveredOptions;\r\n\r\n  const selectedType =\r\n    casesType === \"cases\"\r\n      ? country.cases\r\n      : casesType === \"recovered\"\r\n      ? country.recovered\r\n      : country.deaths;\r\n\r\n  return (\r\n    <Circle\r\n      center={country.center}\r\n      options={selectedOptions}\r\n      radius={(Math.sqrt(selectedType) * 600) / currentZoom}\r\n      onMouseOver={onCircleClick}\r\n      onMouseOut={onClose}\r\n      clickable\r\n    />\r\n  );\r\n}\r\n\r\nfunction Maps(props) {\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false);\r\n  const [currentCountry, setCurrentCountry] = useState(props.country);\r\n  const [currentZoom, setCurrentZoom] = useState();\r\n\r\n  function handleZoomChanged() {\r\n    setCurrentZoom(this.getZoom() + 1);\r\n  }\r\n\r\n  const onClose = () => {\r\n    showingInfoWindow && setShowingInfoWindow(false);\r\n  };\r\n\r\n  const nf = new Intl.NumberFormat();\r\n\r\n  return (\r\n    //googleMapsApiKey=\"AIzaSyA0qwEl7BqF71zcbmOvKq67ZgmPJNB47AM\"\r\n    <LoadScript>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={props.country.center}\r\n        zoom={props.country.zoom}\r\n        onZoomChanged={handleZoomChanged}\r\n        options={{\r\n          // gestureHandling: \"greedy\",\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n          maxZoom: 6,\r\n          minZoom: 1,\r\n        }}\r\n      >\r\n        <>\r\n          {props.countries.map((country, index) => (\r\n            <CircleComponent\r\n              setShowingInfoWindow={setShowingInfoWindow}\r\n              setCurrentCountry={setCurrentCountry}\r\n              country={country}\r\n              showingInfoWindow={showingInfoWindow}\r\n              currentZoom={currentZoom}\r\n              casesType={props.casesType}\r\n              onClose={onClose}\r\n              key={index}\r\n            />\r\n          ))}\r\n\r\n          {showingInfoWindow && (\r\n            <InfoWindow position={currentCountry.center} onCloseClick={onClose}>\r\n              <div>\r\n                <span>\r\n                  <img\r\n                    alt={`${currentCountry.name} Flag`}\r\n                    src={currentCountry.flag}\r\n                    className=\"map_image\"\r\n                  />\r\n                </span>\r\n                <br />\r\n                <span>{`${currentCountry.name}`}</span>\r\n                <br />\r\n                <span>{`Cases: ${nf.format(currentCountry.cases)}`}</span>\r\n                <br />\r\n                <span>{`Recovered: ${nf.format(\r\n                  currentCountry.recovered\r\n                )}`}</span>\r\n                <br />\r\n                <span>{`Deaths: ${nf.format(currentCountry.deaths)}`}</span>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </>\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default React.memo(Maps);\r\n","import React from \"react\";\r\n\r\nimport Maps from \"./GoogleMap.js\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Map() {\r\n  const countries = useSelector((state) => state.countries.countries);\r\n  const selectedCountry = useSelector((state) => state.selectedCountry.country);\r\n  const casesType = useSelector((state) => state.conRender.casesType);\r\n\r\n  const color =\r\n    casesType === \"cases\"\r\n      ? \"rgba(200, 20, 50, 0.5)\"\r\n      : casesType === \"recovered\"\r\n      ? \"rgba(0, 200, 50, 0.5)\"\r\n      : \"rgba(100, 100, 100, 0.5)\";\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", height: \"100%\", width: \"100%\" }}>\r\n      <div\r\n        style={{\r\n          padding: \"3px\",\r\n          // borderBottom: \"1px solid rgb(180, 180, 180)\",\r\n        }}\r\n      >\r\n        <p style={{ display: \"inline\" }}>Map of </p>\r\n        <h3 style={{ display: \"inline\", color: color }}>{casesType}</h3>\r\n      </div>\r\n      <div style={{ position: \"relative\", height: \"250px\", width: \"100%\" }}>\r\n        <Maps\r\n          countries={countries}\r\n          country={selectedCountry}\r\n          casesType={casesType}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <p\r\n          style={{\r\n            fontSize: \"13px\",\r\n            color: \"gray\",\r\n            paddingLeft: \"10px\",\r\n            display: \"inline\",\r\n            position: \"relative\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          Source:\r\n        </p>\r\n        <a\r\n          href=\"https://www.worldometers.info/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={{ color: \"gray\", display: \"inline\", fontSize: \"10px\" }}\r\n        >\r\n          Worldometer\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\n\r\nimport \"../Styling/Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>\r\n        Contact me:{\" \"}\r\n        <a href=\"mailto: adham@adhamnasr.com\">adham@adhamnasr.com</a>\r\n      </p>\r\n      <p style={{ fontSize: \"11px\" }}>Copyright&copy; 2020</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchCountries = createAsyncThunk(\r\n  \"countries/fetchCountries\",\r\n  async () => {\r\n    const res = await fetch(\r\n      \"https://disease.sh/v3/covid-19/countries?yesterday=true\"\r\n    );\r\n    return res.json();\r\n  }\r\n);\r\n\r\nconst countries = createSlice({\r\n  name: \"countries\",\r\n  initialState: {\r\n    loading: null,\r\n    countries: [],\r\n  },\r\n  reducers: {\r\n    pushToCountries: (state, action) => {\r\n      state.countries.push(action.payload);\r\n    },\r\n    updateCountries: (state, action) => {\r\n      state.countries = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchCountries.pending]: (state) => {\r\n      state.loading = true;\r\n    },\r\n    [fetchCountries.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      const countriesS = action.payload.map((country) => ({\r\n        name: country.country,\r\n        value: country.countryInfo.iso2,\r\n        cases: country.cases,\r\n        todayCases: country.todayCases,\r\n        recovered: country.recovered,\r\n        todayRecovered: country.todayRecovered,\r\n        deaths: country.deaths,\r\n        todayDeaths: country.todayDeaths,\r\n        flag: country.countryInfo.flag,\r\n        center: {\r\n          lat: country.countryInfo.lat,\r\n          lng: country.countryInfo.long,\r\n        },\r\n        zoom: 4,\r\n        active: country.active,\r\n        critical: country.critical,\r\n        tests: country.tests,\r\n        casePerPerson: country.oneCasePerPeople,\r\n        testPerPerson: country.oneTestPerPeople,\r\n        deathPerPerson: country.oneDeathPerPeople,\r\n        timeline: null,\r\n        // todayUpdated: 0,\r\n      }));\r\n      state.countries = countriesS;\r\n    },\r\n    [fetchCountries.rejected]: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { pushToCountries, updateCountries } = countries.actions;\r\n\r\nexport default countries.reducer;\r\n","export default __webpack_public_path__ + \"static/media/earth.f22c010c.jpg\";","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport pic from \"../../Images/earth.jpg\";\r\n\r\nexport const fetchWorldwide = createAsyncThunk(\r\n  \"worldwide/fetchworldwide\",\r\n  async () => {\r\n    const res = await fetch(\r\n      \"https://disease.sh/v3/covid-19/all?yesterday=true\"\r\n    );\r\n    return res.json();\r\n  }\r\n);\r\n\r\nconst worldwide = createSlice({\r\n  name: \"worldwide\",\r\n  initialState: {\r\n    loading: null,\r\n    worldwide: [],\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchWorldwide.pending]: (state) => {\r\n      state.loading = true;\r\n    },\r\n\r\n    [fetchWorldwide.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      const worldwide = action.payload;\r\n      worldwide.name = \"WorldWide\";\r\n      worldwide.flag = pic;\r\n      worldwide.center = {\r\n        lat: 0,\r\n        lng: 0,\r\n      };\r\n      worldwide.zoom = 1;\r\n      worldwide.casePerPerson =\r\n        action.payload.population / action.payload.cases;\r\n      worldwide.testPerPerson =\r\n        action.payload.population / action.payload.tests;\r\n      worldwide.deathPerPerson =\r\n        action.payload.population / action.payload.deaths;\r\n      worldwide.timeline = null;\r\n      state.worldwide = worldwide;\r\n    },\r\n\r\n    [fetchWorldwide.rejected]: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default worldwide.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Styling/App.css\";\r\n\r\nimport Header from \"./Components/Header/Header.js\";\r\nimport LineGraph from \"./Components/LineGraph\";\r\nimport Slider from \"./Components/Slider.js\";\r\nimport DataLayout from \"./Components/DataLayout\";\r\nimport Map from \"./Components/Map\";\r\nimport Footer from \"./Components/Footer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  fetchCountries,\r\n  pushToCountries,\r\n  updateCountries,\r\n} from \"./redux/reducers/countries\";\r\nimport { fetchWorldwide } from \"./redux/reducers/worldwide\";\r\nimport { changeSelectedCountry } from \"./redux/reducers/selectedCountry\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const sortType = useSelector((state) => state.conRender.sortingType);\r\n  const worldwide = useSelector((state) => state.worldwide.worldwide);\r\n  const countries = useSelector((state) => state.countries.countries);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMobile = useWindowSize();\r\n\r\n  function useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n      width: undefined,\r\n      height: undefined,\r\n    });\r\n\r\n    useEffect(() => {\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n        // Set window width/height to state\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }\r\n\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n\r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize();\r\n\r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n\r\n    return windowSize;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const sortData = (data) => {\r\n      const sortedData = [...data];\r\n\r\n      return sortType === \"cases\"\r\n        ? sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1))\r\n        : sortType === \"deaths\"\r\n        ? sortedData.sort((a, b) => (a.deaths > b.deaths ? -1 : 1))\r\n        : sortType === \"recovered\"\r\n        ? sortedData.sort((a, b) => (a.recovered > b.recovered ? -1 : 1))\r\n        : sortType === \"todayCases\"\r\n        ? sortedData.sort((a, b) => (a.todayCases > b.todayCases ? -1 : 1))\r\n        : sortType === \"todayDeaths\"\r\n        ? sortedData.sort((a, b) => (a.todayDeaths > b.todayDeaths ? -1 : 1))\r\n        : sortType === \"todayRecovered\"\r\n        ? sortedData.sort((a, b) =>\r\n            a.todayRecovered > b.todayRecovered ? -1 : 1\r\n          )\r\n        : sortType === \"active\"\r\n        ? sortedData.sort((a, b) => (a.active > b.active ? -1 : 1))\r\n        : sortType === \"countries\"\r\n        ? sortedData.sort((a, b) => (a.name < b.name ? -1 : 1))\r\n        : sortedData.sort((a, b) => (a > b ? -1 : 1));\r\n    };\r\n    const sorted = sortData(countries);\r\n    dispatch(updateCountries(sorted));\r\n  }, [sortType]);\r\n\r\n  useEffect(() => {\r\n    return dispatch(fetchCountries()), dispatch(fetchWorldwide());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return dispatch(\r\n      pushToCountries(worldwide),\r\n      dispatch(changeSelectedCountry(worldwide))\r\n    );\r\n  }, [worldwide]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__header\" id=\"header\">\r\n        <ErrorBoundary>\r\n          <Header isMobile={isMobile} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <div className=\"app__body\" id=\"bodyExtension\">\r\n        <div className=\"app__dataLayout\">\r\n          <ErrorBoundary>\r\n            <DataLayout />\r\n          </ErrorBoundary>\r\n        </div>\r\n        <div className=\"app__map_wrapper\">\r\n          <ErrorBoundary>\r\n            <Map />\r\n          </ErrorBoundary>\r\n        </div>\r\n        <div className=\"app__graph\">\r\n          <div className=\"app__graph_graph\">\r\n            <ErrorBoundary>\r\n              <LineGraph />\r\n            </ErrorBoundary>\r\n          </div>\r\n          <ErrorBoundary>\r\n            <Slider />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <div className=\"app__footer\">\r\n        <ErrorBoundary>\r\n          <Footer />\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport conrenderReducer from \"./reducers/conRender\";\r\nimport countries from \"./reducers/countries\";\r\nimport logger from \"redux-logger\";\r\nimport worldwide from \"./reducers/worldwide\";\r\nimport selectedCountry from \"./reducers/selectedCountry\";\r\nimport graphData from \"./reducers/graphData\";\r\n\r\nconst reducer = combineReducers({\r\n  conRender: conrenderReducer,\r\n  countries: countries,\r\n  worldwide: worldwide,\r\n  selectedCountry: selectedCountry,\r\n  graphData: graphData,\r\n});\r\n\r\nconst firstMiddleware = (store) => (next) => (action) => {\r\n  return next(action);\r\n};\r\n\r\nconst middleware = (getDefaultMiddleware) =>\r\n  getDefaultMiddleware().concat(firstMiddleware);\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport store from \"./redux/configureStore\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// After user zoom out, if different country selected from dropdown, map doesn't zoom back to it. Check the setZoom on country change\r\n// When a country is selected table scrolls to that country and highlights raw\r\n// Check out why the map circles load twice when deaths selected. Maybe cuz \"cases\" is set to default\r\n\r\n// total button not centered on apple\r\n"],"sourceRoot":""}